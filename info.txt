** Setting up react native firebase using Expo cli
1- Create a new project in Firebase console
2- npm install --save @react-native-firebase/app
3- Create a Web app in firebase
4- npm install firebase@9.6.11
5- Create a new folder firebase and inside it create a new file as (firebase.config.js)

6- Setting up navigation

    (A)-Stack navigation
    - npm install @react-navigation/native
    - npx expo install react-native-screens react-native-safe-area-context
    - npm install @react-navigation/native-stack

    (B)-DRAWER NAVIGATION
    - npm install @react-navigation/drawer
    - npx expo install react-native-gesture-handler react-native-reanimated
    - npm install react-native-reanimated
    - In babel.config.js
        module.exports = function(api) {
            api.cache(true);
            return {
                presets: ['babel-preset-expo'],
                plugins: [
                'react-native-reanimated/plugin'
            ]
            };
        };
    - In app.js (import 'react-native-gesture-handler';)
    - expo start -c 

7- Creating Sign and Sign up screen using Custom Input and Button components.
8- Enable firestore database and storage in production mode.
9- For Sign Up - First we enable cloud firestore and storage then change their rules permission.
10- Follow the code written on login and register methods to get to know how signup and sign with firebase is implemented.

** Login and Login Setup using Context Api and local storage **
1- Create a LoginProvider context for managing login user state.
2- Set (setIsLoggedIn,setProfile) values while user successfully completed login process (When User Login).
3- Fetch data from AsyncStorage and update Context data based on it for managing user login details throught app.
4- Empty the AsyncStorage values and Context data while logging out (When User Logout).